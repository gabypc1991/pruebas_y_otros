#include <Arduino.h>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>
#include <ESP8266mDNS.h>
#include <EEPROM.h>
#include "Adafruit_Si7021.h"

#define EEPROM_SIZE 4096

#ifndef APSSID
#define APSSID "PROJECTOR_LASER"
#define APPSK  "123456789"
#endif

unsigned long currentTime = millis();
unsigned long previousTime = 0; 
const long timeoutTime = 2000;

const char *ssid = APSSID;
const char *password = APPSK;

String pagina = "index";
String header;

const int delta_t_table[41][101]{
                                  {365,331,389,436,452,459,462,463,464,464,464,464,463,462,461,461,459,458,456,455,453,451,449,447,445,443,440,438,435,432,429,426,423,420,417,413,410,406,402,399,395,390,386,382,378,373,369,364,359,355,350,345,340,335,329,324,319,313,308,302,296,291,285,279,273,267,261,254,248,242,235,229,222,215,209,202,195,188,181,174,167,160,153,146,138,131,123,116,108,101,93,85,78,70,62,54,46,38,30,21,13},
                                  {345,355,430,481,498,505,507,508,507,506,505,504,502,500,498,496,494,492,490,487,485,482,479,476,474,471,467,464,461,457,454,450,446,443,439,435,431,426,422,418,413,409,404,399,394,390,385,379,374,369,364,358,353,347,342,336,330,324,319,313,306,300,294,288,281,275,269,262,255,249,242,235,228,221,214,207,200,193,186,179,171,168,156,149,141,134,126,118,110,102,95,87,79,70,62,54,46,38,29,21,12},
                                  {372,397,476,529,546,552,553,553,551,549,547,544,542,539,536,533,530,527,523,520,517,513,509,506,502,498,495,492,489,486,482,478,474,470,466,462,458,453,448,443,438,433,428,423,418,413,407,401,395,389,383,377,371,365,359,352,345,338,331,324,317,310,303,296,289,282,275,268,261,254,247,240,233,226,219,212,205,198,191,184,176,168,160,152,144,136,128,120,112,104,96,88,80,71,63,55,47,38,29,20,11},
                                  {417,446,526,579,595,599,600,598,595,592,589,585,581,577,573,569,565,561,557,553,548,544,540,535,531,526,522,518,514,510,505,500,495,490,485,480,475,470,465,459,453,447,441,435,429,423,417,411,405,399,393,387,380,373,366,359,352,345,338,331,324,317,310,303,296,289,282,275,268,261,254,247,240,233,226,219,211,203,195,187,179,171,163,155,147,139,131,123,115,107,99,91,83,74,66,58,50,41,32,23,14},
                                  {468,498,578,629,644,647,646,643,639,635,630,625,621,616,611,606,601,595,590,585,580,575,570,565,559,554,549,544,539,534,529,524,518,512,506,500,494,488,482,476,470,464,458,452,446,440,433,426,419,412,405,398,391,384,377,370,363,356,349,342,335,328,321,314,307,300,293,286,278,270,262,254,246,238,230,222,214,206,198,190,182,174,166,158,150,142,134,126,118,110,102,94,85,76,67,58,49,40,31,22,13},
                                  {521,551,630,680,694,696,693,689,684,678,672,666,660,654,648,642,636,630,624,618,612,606,600,594,588,582,576,570,564,558,552,546,540,534,528,522,516,510,504,498,492,485,478,471,464,457,450,443,436,429,422,415,408,401,394,387,380,372,364,356,348,340,332,324,316,308,300,292,284,276,268,260,252,244,236,228,220,212,204,196,188,180,172,164,156,147,138,129,120,111,102,93,84,75,66,57,48,38,28,18,8},
                                  {577,606,683,731,744,744,740,735,728,721,714,707,700,693,685,678,671,664,658,651,644,637,630,623,617,610,604,598,592,586,580,574,568,562,556,550,543,536,529,522,515,508,501,494,487,480,473,466,459,452,445,437,429,421,413,405,397,389,381,373,365,357,349,341,333,325,317,309,301,293,285,277,269,261,253,245,237,229,220,211,202,193,184,175,166,157,148,139,130,121,112,103,94,84,74,64,54,44,34,24,14},
                                  {633,660,736,784,795,793,788,781,773,765,756,748,740,732,723,714,707,698,691,684,676,668,660,652,646,638,631,624,617,610,603,596,589,582,575,568,561,554,547,540,533,526,519,512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,343,334,325,316,307,298,289,280,271,262,253,244,235,226,217,208,199,190,181,172,163,154,145,136,126,116,106,96,86,76,66,56,46,36,26,16,6},
                                  {690,716,789,837,846,842,836,827,818,809,798,789,780,771,761,750,743,732,724,717,708,699,690,681,675,666,658,650,642,634,626,618,610,602,594,586,578,570,562,554,546,538,530,522,514,506,498,490,482,474,466,458,449,440,431,422,413,404,395,386,377,368,359,350,341,332,323,314,305,296,287,278,269,260,251,241,231,221,211,201,191,181,171,161,151,141,131,121,112,103,94,85,76,67,58,49,40,31,22,13,4},
                                  {748,771,843,890,897,891,884,873,863,853,840,830,820,810,799,786,779,766,757,750,740,730,720,710,704,694,686,678,670,662,654,646,638,629,620,611,602,593,584,575,566,557,548,539,530,521,512,502,492,482,472,462,452,442,432,422,412,402,392,382,373,364,355,346,337,328,319,310,301,292,283,275,267,259,251,243,235,227,218,209,200,191,182,173,164,155,146,137,128,119,110,101,92,82,72,62,52,42,32,22,12},
                                  {805,827,897,943,948,940,932,919,908,897,882,871,860,849,837,822,815,800,790,783,772,761,750,739,733,722,712,702,692,682,672,662,652,643,634,625,616,607,598,589,580,571,562,553,544,535,526,517,508,499,490,480,470,460,450,440,430,420,410,400,390,382,374,366,358,350,342,334,326,318,310,300,290,280,270,260,250,240,230,220,210,200,190,180,170,160,150,140,130,120,110,99,88,77,66,56,46,36,26,16,6},
                                  {863,883,951,996,999,989,980,965,953,941,924,912,900,888,875,858,851,834,823,816,804,792,780,768,762,750,740,730,720,710,700,690,680,670,660,650,640,630,620,610,600,590,580,570,560,550,540,530,520,510,500,490,480,471,462,453,444,435,426,417,408,399,390,381,371,361,351,341,331,321,311,301,291,281,271,261,251,241,231,221,211,201,191,181,171,161,151,141,131,121,111,101,91,81,71,60,49,38,27,16,5},
                                  {921,939,1005,1049,1050,1038,1028,1011,998,985,966,953,940,927,913,894,887,868,856,849,836,823,810,797,791,778,767,756,745,734,723,712,701,690,679,669,659,649,639,629,619,609,599,589,579,569,559,549,539,529,519,509,499,489,479,469,459,449,439,429,419,409,399,389,379,369,359,349,339,328,317,306,295,285,275,265,255,245,235,225,215,205,195,185,175,165,155,144,133,122,111,101,91,81,71,60,49,38,27,16,5},
                                  {979,995,1059,1102,1101,1087,1076,1057,1043,1029,1008,994,980,966,951,930,923,902,889,882,868,854,840,826,820,806,794,782,770,758,747,736,725,714,703,692,681,670,659,648,637,626,615,604,593,582,572,562,552,542,532,522,512,502,492,482,472,461,450,439,428,417,406,395,384,374,364,354,344,334,324,314,304,294,284,274,263,252,241,230,219,208,197,186,175,164,153,143,133,123,113,103,92,81,70,59,48,37,26,15,4},
                                  {1037,1051,1113,1155,1152,1136,1124,1103,1088,1073,1050,1035,1020,1005,989,966,959,936,922,915,900,885,870,855,849,834,822,810,798,786,774,762,750,738,726,714,702,690,678,667,656,645,634,623,612,601,590,579,568,557,546,535,524,513,502,491,480,469,458,448,438,427,416,405,394,383,372,361,351,341,331,321,311,300,289,278,267,256,245,234,223,212,201,190,179,168,157,146,135,124,113,102,91,80,69,58,47,36,25,14,3},
                                  {1095,1107,1168,1208,1203,1185,1172,1149,1133,1117,1092,1076,1060,1044,1027,1002,995,970,955,948,932,916,900,884,878,862,850,838,826,814,802,790,778,766,753,740,727,714,701,688,675,663,651,639,627,615,604,593,582,571,560,548,536,525,514,503,492,481,470,459,448,437,426,415,404,393,382,371,360,349,338,326,315,304,293,282,271,260,249,238,227,215,204,193,182,171,160,149,138,127,116,104,92,80,69,58,47,36,25,14,3},
                                  {1154,1163,1222,1261,1254,1234,1220,1195,1178,1161,1134,1117,1100,1083,1065,1038,1031,1004,988,981,964,947,930,913,907,890,876,862,849,836,823,810,797,784,771,758,745,732,719,706,694,682,670,658,646,634,622,610,598,586,574,562,550,538,526,514,502,491,480,469,458,447,436,425,414,403,392,381,369,357,345,334,323,312,301,290,279,267,255,243,231,220,209,198,187,176,165,153,141,129,117,106,95,84,73,62,50,38,26,14,2},
                                  {1212,1219,1276,1314,1305,1283,1268,1241,1223,1205,1176,1158,1140,1122,1103,1074,1067,1038,1021,1014,996,978,960,942,936,918,903,888,874,860,846,832,818,804,790,777,764,751,738,725,712,699,686,673,660,648,636,624,612,600,588,576,564,552,540,528,516,504,492,480,469,458,447,435,423,411,399,387,375,363,351,340,329,318,307,295,283,271,259,247,235,224,213,202,191,179,167,155,143,131,119,108,97,85,73,61,49,37,25,13,1},
                                  {1270,1276,1330,1367,1356,1332,1316,1287,1268,1249,1218,1199,1180,1161,1141,1110,1103,1072,1054,1047,1028,1009,990,971,965,946,929,913,899,885,871,857,843,829,815,801,787,773,759,745,732,719,706,693,680,667,654,641,628,615,602,589,576,563,551,539,527,515,503,491,479,467,455,443,431,419,407,395,383,371,358,346,334,322,310,298,286,274,262,250,239,228,216,204,192,180,168,156,144,132,120,108,96,84,72,60,48,36,24,12,0},
                                  {1329,1332,1385,1420,1407,1381,1364,1333,1313,1293,1260,1240,1220,1200,1179,1146,1139,1106,1087,1080,1060,1040,1020,1000,994,974,957,941,926,913,899,884,869,854,839,824,809,794,779,764,749,735,721,707,694,681,668,655,642,629,616,603,590,577,564,551,538,525,513,501,489,476,463,450,437,425,413,401,389,377,365,352,339,327,315,303,291,279,267,255,243,230,218,206,194,182,170,158,146,134,122,109,96,84,72,60,48,36,24,12,0},
                                  {1387,1388,1439,1473,1458,1430,1412,1379,1358,1337,1302,1281,1260,1239,1217,1182,1175,1140,1120,1113,1092,1071,1050,1029,1023,1002,984,966,949,933,918,903,888,873,858,843,828,813,798,784,770,756,742,728,714,700,686,672,658,644,630,616,603,590,577,564,551,538,525,512,499,486,473,460,447,434,421,408,396,384,372,359,346,333,320,307,295,283,271,259,247,234,221,208,195,183,171,159,147,135,123,110,97,84,71,59,47,35,23,11,-1},
                                  {1446,1445,1494,1526,1509,1479,1460,1425,1403,1381,1344,1322,1300,1278,1255,1218,1211,1174,1153,1146,1124,1102,1080,1058,1052,1030,1012,994,976,959,943,928,913,898,883,867,851,835,819,803,787,772,757,742,728,714,700,686,672,658,644,630,616,602,588,574,561,548,535,522,509,496,483,470,457,444,431,418,405,392,379,366,353,340,327,314,301,288,275,263,251,238,225,212,199,186,173,161,149,137,125,110,95,82,70,58,46,34,22,10,-2},
                                  {1504,1501,1548,1579,1560,1528,1508,1471,1448,1425,1386,1363,1340,1317,1293,1254,1247,1208,1186,1179,1156,1133,1110,1087,1081,1058,1038,1018,999,981,964,948,933,917,901,885,869,853,837,821,805,789,773,758,743,728,714,700,686,672,658,644,630,616,602,588,574,560,546,532,519,506,493,480,467,454,441,428,414,400,386,373,360,347,334,321,308,295,282,269,256,243,230,217,204,191,178,165,152,139,126,113,100,87,74,61,48,35,22,10,-2},
                                  {1563,1557,1602,1632,1611,1577,1556,1517,1493,1469,1428,1404,1380,1356,1331,1290,1283,1242,1219,1212,1188,1164,1140,1116,1110,1086,1065,1044,1024,1005,987,970,954,938,922,906,890,874,858,841,824,808,792,777,762,747,732,717,702,687,672,656,641,627,613,599,585,571,557,543,529,515,501,487,473,459,445,432,419,406,393,380,367,354,341,328,315,301,287,273,259,246,233,220,207,194,181,168,155,142,128,115,102,89,76,63,50,37,24,11,-3},
                                  {1621,1614,1657,1685,1662,1626,1604,1563,1538,1513,1470,1445,1420,1395,1369,1326,1319,1276,1253,1245,1220,1195,1170,1145,1139,1114,1093,1072,1051,1031,1012,994,977,961,945,928,911,894,877,860,843,827,811,795,779,763,747,731,716,701,686,670,654,638,624,610,596,582,568,554,539,525,511,497,483,469,455,441,427,413,399,385,371,357,343,329,315,302,289,276,263,249,235,221,207,194,181,168,155,142,129,115,101,87,74,61,48,35,22,9,-4},
                                  {1680,1670,1711,1738,1713,1675,1652,1609,1583,1557,1512,1486,1460,1434,1407,1362,1355,1310,1287,1278,1252,1226,1200,1174,1168,1142,1120,1098,1076,1055,1035,1018,1001,984,967,950,933,916,898,880,862,845,828,811,794,778,762,746,730,715,700,685,670,655,640,625,610,595,580,565,550,535,520,505,490,476,462,448,434,420,406,391,376,361,346,332,319,306,293,280,267,252,237,222,209,196,183,170,157,144,131,116,101,86,73,60,47,34,21,8,-5},
                                  {1738,1727,1766,1791,1764,1724,1700,1655,1628,1601,1554,1527,1500,1473,1445,1398,1391,1344,1321,1311,1284,1257,1230,1203,1197,1170,1148,1126,1104,1083,1063,1046,1029,1012,995,976,957,938,919,900,881,864,847,830,813,797,781,765,748,731,714,699,684,669,654,639,624,608,592,576,560,545,530,515,500,486,472,458,443,428,413,398,383,368,353,339,326,313,299,285,271,256,241,226,213,200,187,174,160,146,132,117,102,87,74,61,48,35,22,9,-5},
                                  {1797,1783,1820,1844,1815,1773,1748,1701,1673,1645,1596,1568,1540,1512,1483,1434,1427,1378,1355,1344,1316,1288,1260,1232,1226,1198,1174,1150,1126,1105,1085,1068,1051,1034,1017,998,979,959,939,919,899,882,865,848,831,815,799,781,763,745,727,712,697,682,667,652,637,621,604,587,570,555,540,525,510,496,482,468,452,436,420,405,390,375,360,346,333,320,305,290,275,260,245,230,217,204,191,178,164,149,134,119,104,89,76,63,50,37,24,9,-6},
                                  {1855,1840,1875,1897,1866,1822,1796,1747,1718,1689,1638,1609,1580,1551,1521,1471,1463,1412,1389,1377,1348,1319,1290,1261,1255,1226,1202,1178,1154,1133,1113,1096,1079,1062,1042,1022,1002,981,960,939,918,901,884,867,850,834,818,799,780,761,742,727,712,697,682,667,652,634,616,598,580,565,550,535,520,506,492,478,461,444,427,412,397,382,367,353,340,327,311,295,279,264,249,234,221,208,195,182,167,151,135,120,105,90,77,64,51,38,25,9,-7},
                                  {1914,1896,1929,1950,1917,1871,1843,1793,1763,1733,1680,1650,1620,1590,1559,1508,1499,1446,1423,1410,1380,1350,1320,1290,1284,1254,1229,1204,1179,1158,1138,1121,1104,1087,1067,1046,1024,1002,980,958,936,919,902,885,868,852,836,816,796,776,756,741,726,711,696,681,666,647,628,609,590,575,560,545,530,516,502,488,470,452,434,419,404,389,374,360,347,334,317,300,283,268,253,238,225,212,199,186,170,154,137,122,107,92,79,66,53,40,27,10,-7},
                                  {1973,1952,1984,2003,1968,1920,1890,1839,1808,1777,1722,1691,1660,1629,1597,1545,1535,1480,1457,1443,1412,1381,1350,1320,1313,1282,1256,1230,1204,1179,1155,1135,1115,1095,1075,1055,1035,1015,995,975,955,938,921,904,887,871,854,833,812,791,770,755,740,725,710,695,680,660,640,620,600,585,570,555,540,526,512,497,478,459,440,425,410,395,380,366,353,338,321,304,287,272,257,242,229,216,203,190,173,156,138,123,108,93,80,67,54,41,28,10,-8},
                                  {2031,2009,2038,2056,2019,1969,1937,1885,1853,1821,1764,1732,1700,1668,1635,1582,1570,1515,1491,1476,1444,1412,1380,1350,1342,1310,1284,1258,1232,1207,1183,1163,1143,1123,1103,1083,1061,1039,1017,995,973,956,939,922,905,889,871,850,828,806,784,769,754,739,724,709,695,674,653,632,611,596,581,566,551,537,523,507,487,467,447,432,417,402,387,373,360,344,327,309,291,276,261,246,233,220,207,194,177,159,140,125,110,95,82,69,56,43,29,10,-9},
                                  {2090,2065,2093,2109,2070,2018,1984,1932,1898,1864,1806,1773,1740,1707,1673,1619,1605,1550,1525,1509,1476,1443,1410,1380,1371,1338,1312,1287,1262,1237,1212,1192,1172,1152,1129,1106,1083,1060,1037,1014,991,974,957,940,923,907,889,867,844,821,798,783,768,753,738,723,709,687,665,643,621,606,591,576,561,547,533,517,497,476,454,439,424,409,394,380,367,351,334,315,295,280,265,250,237,224,211,198,181,161,141,126,111,96,83,70,57,44,30,10,-10},
                                  {2148,2122,2147,2162,2121,2067,2031,1979,1943,1907,1848,1814,1780,1746,1711,1656,1640,1585,1559,1542,1508,1474,1440,1410,1400,1366,1338,1313,1288,1263,1237,1217,1197,1177,1154,1131,1107,1083,1059,1035,1011,994,977,960,943,927,908,884,860,836,812,797,782,767,752,737,723,700,677,654,631,616,601,586,571,557,543,527,507,484,461,446,431,416,401,387,374,358,341,320,299,284,269,254,241,228,215,202,185,164,143,128,113,98,85,72,59,46,32,11,-10},
                                  {2207,2178,2202,2215,2172,2116,2078,2026,1988,1950,1890,1855,1820,1785,1748,1693,1675,1620,1593,1575,1540,1505,1470,1440,1429,1394,1367,1340,1313,1287,1261,1236,1212,1188,1165,1142,1119,1096,1074,1052,1030,1008,986,966,946,926,906,886,866,846,826,807,788,769,750,731,713,695,677,659,641,623,605,587,570,553,536,519,502,485,468,451,434,417,400,383,367,351,335,319,303,287,271,255,239,223,207,191,175,159,144,129,114,99,84,69,53,37,21,5,-11},
                                  {2266,2235,2256,2268,2223,2165,2125,2073,2033,1993,1932,1896,1860,1824,1785,1730,1710,1655,1627,1607,1572,1536,1500,1470,1458,1422,1392,1362,1336,1311,1286,1261,1236,1211,1187,1164,1141,1118,1095,1072,1049,1026,1003,980,960,940,920,900,880,860,840,820,800,780,761,742,723,704,686,668,650,632,614,596,578,560,543,526,509,492,475,458,441,424,407,390,373,356,339,323,307,291,275,259,243,227,211,195,179,163,148,132,116,100,84,68,52,36,20,4,-12},
                                  {2324,2291,2311,2321,2274,2214,2172,2120,2078,2036,1974,1937,1900,1862,1822,1767,1745,1690,1661,1639,1604,1567,1530,1500,1487,1450,1419,1388,1362,1336,1310,1284,1258,1232,1206,1182,1159,1136,1113,1090,1067,1044,1021,998,975,954,934,914,894,874,854,834,814,794,774,755,736,717,698,679,661,643,625,607,589,571,553,535,517,499,482,465,448,431,414,397,380,363,346,329,311,293,275,257,239,223,207,192,177,162,147,132,116,100,84,68,52,36,20,4,-12},
                                  {2383,2348,2365,2374,2325,2263,2219,2167,2123,2079,2016,1978,1940,1900,1859,1804,1780,1725,1695,1671,1636,1598,1560,1530,1516,1478,1447,1416,1389,1362,1335,1308,1281,1254,1227,1203,1179,1155,1132,1109,1086,1059,1032,1005,978,959,941,923,905,887,869,851,833,815,797,775,753,731,711,691,671,653,635,617,599,580,561,542,524,506,488,470,452,434,416,399,382,365,348,331,315,299,283,267,251,234,217,200,183,166,149,133,117,101,85,69,53,37,21,4,-13},
                                  {2441,2404,2420,2427,2376,2312,2266,2214,2168,2122,2058,2019,1980,1938,1896,1841,1815,1760,1729,1703,1668,1629,1590,1560,1545,1506,1474,1442,1414,1386,1359,1332,1305,1278,1251,1226,1201,1177,1153,1129,1105,1081,1057,1033,1009,988,967,946,925,904,883,862,841,820,799,779,759,739,720,701,682,663,644,625,606,587,568,549,531,513,495,477,459,441,423,405,387,370,353,336,319,302,285,268,251,234,217,200,183,166,150,133,116,99,82,66,50,34,18,2,-14},
                                  {2500,2461,2474,2480,2427,2361,2313,2261,2213,2165,2100,2060,2020,1976,1933,1878,1850,1795,1763,1735,1700,1660,1620,1590,1574,1534,1501,1468,1440,1412,1384,1356,1328,1300,1272,1247,1222,1197,1172,1147,1123,1099,1075,1051,1027,1005,983,961,939,918,897,876,855,834,813,792,772,752,732,712,692,672,652,632,612,593,574,556,538,520,502,484,466,448,430,412,394,376,358,340,323,306,289,272,255,238,221,204,187,170,154,137,120,103,86,69,52,35,18,2,-14},
                                  {2559,2517,2529,2533,2478,2410,2360,2308,2258,2208,2142,2101,2060,2014,1970,1915,1885,1830,1797,1767,1732,1691,1650,1620,1603,1562,1528,1494,1465,1436,1408,1380,1352,1324,1296,1270,1244,1218,1192,1167,1142,1117,1092,1067,1042,1020,998,976,954,932,911,890,869,848,827,806,785,764,743,722,702,682,662,642,622,603,584,565,546,527,509,491,473,455,437,419,401,383,365,346,327,308,289,270,251,234,217,201,185,169,153,137,121,104,87,70,53,36,19,2,-15},
                                  };


const int sensorPin = 10;
const int measureInterval = 2500;
volatile int pulseConter;

int viento_min = 3;
int viento_med = 15;
int viento_max = 21;

bool enableHeater = false;
float factorK = 1;
float factorKh = 1;
float factorKt = 1;
float h;
float t;
float dt;
float flow_Lmin;

LiquidCrystal_I2C lcd(0x27, 16, 2);
WiFiServer server(80);
//DHT dht(DHTPIN, DHTTYPE);
Adafruit_Si7021 sensor = Adafruit_Si7021();

void ICACHE_RAM_ATTR isr() {  
  
  static unsigned long last_interrupt_time = 0;
  unsigned long interrupt_time = millis();
  // If interrupts come faster than 200ms, assume it's a bounce and ignore
  if (interrupt_time - last_interrupt_time > 2) 
  {
    pulseConter++;
  }
  last_interrupt_time = interrupt_time;  
}

float GetFrequency()
{
   pulseConter = 0;
   interrupts();
   delay(measureInterval);
   read_dht();
   webExc();
//   granizo();
   noInterrupts();   
   return (float)pulseConter * 1000 / measureInterval;
}

void granizo(){
  if(pulseConter > 0){
    lcd.setCursor(0, 0);lcd.print("  CAYO GRANIZO! ");
    lcd.setCursor(0, 1);lcd.print("      AYER      ");
    delay(1500);
    lcd.setCursor(0, 0);lcd.print("      PUTO      ");
    lcd.setCursor(0, 1);lcd.print("                ");
    delay(500);
    lcd.setCursor(0, 0);lcd.print("                ");
    lcd.setCursor(0, 1);lcd.print("                ");
    }
  }

void setup()
{
  pinMode(LED_A_R, OUTPUT);
  pinMode(LED_A_G, OUTPUT);
  pinMode(LED_B_R, OUTPUT);
  pinMode(LED_B_G, OUTPUT);
  digitalWrite(LED_A_R, LOW);
  digitalWrite(LED_A_G, LOW);
  digitalWrite(LED_B_R, LOW);
  digitalWrite(LED_B_G, LOW);  
  analogWriteRange(255);
  EEPROM.begin(EEPROM_SIZE);  
//  eeprom_fst_write();
  EEPROM.get(0, factorK);
  EEPROM.get(4, factorKh);
  EEPROM.get(8, factorKt);
  EEPROM.get(12, viento_min);
  EEPROM.get(16, viento_med);
  EEPROM.get(20, viento_max);
  Serial.begin(115200);
  sensor.begin();
  lcd.begin(16, 2);
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);lcd.print("    Estacion    ");
  lcd.setCursor(0, 1);lcd.print(" Meteorologica  ");
  delay(2000);
  lcd.setCursor(0, 0);lcd.print("Mod.    em001   ");
  lcd.setCursor(0, 1);lcd.print("SW ver. 0.xx    ");
  delay(2000);
  encendido_led(1,1);
  delay(500);
  encendido_led(1,2);
  delay(500);
  encendido_led(1,3);
  delay(500);
  encendido_led(2,1);
  delay(500);
  encendido_led(2,2);
  delay(500);
  encendido_led(2,3);
  delay(500);
  encendido_led(1,0);
  encendido_led(2,0);
  Serial.print("Configurando punto de acceso...");
  WiFi.softAP(ssid, password);
  IPAddress myIP = WiFi.softAPIP();
  Serial.print("Direccion de IP AP: ");
  Serial.println(myIP);  
  server.begin();
  Serial.println("HTTP server en linea");
  lcd.clear();  
  lcd.setCursor(0, 0);lcd.print("V:");
  lcd.setCursor(9, 0);lcd.print("Dt:");
  lcd.setCursor(0, 1);lcd.print("Te:");
  lcd.setCursor(9, 1);lcd.print("Hr:");   
  pinMode(sensorPin, INPUT_PULLUP);
  attachInterrupt(sensorPin, isr, FALLING);
}

void eeprom_fst_write(){
    EEPROM.put(0, 1.2f);
    EEPROM.commit();
    EEPROM.put(4, 1.0f);
    EEPROM.commit();
    EEPROM.put(8, 1.0f);
    EEPROM.commit();
    EEPROM.put(12, 3);
    EEPROM.commit();
    EEPROM.put(16, 15);
    EEPROM.commit();
    EEPROM.put(20, 21);
    EEPROM.commit();
  }

void encendido_led(int led, int color){
  if(led == 1){
    if(color == 1){
      analogWrite(LED_A_R, 120);
      analogWrite(LED_A_G, 0);
     }else if(color == 2){
      analogWrite(LED_A_R, 120);
      analogWrite(LED_A_G, 150);
     }else if(color == 3){
      analogWrite(LED_A_R, 0);
      analogWrite(LED_A_G, 150);
     }else if(color == 0){
      analogWrite(LED_A_R, 0);
      analogWrite(LED_A_G, 0);
      }     
   }
  if(led == 2){
    if(color == 1){
      analogWrite(LED_B_R, 120);
      analogWrite(LED_B_G, 0);
     }else if(color == 2){
      analogWrite(LED_B_R, 120);
      analogWrite(LED_B_G, 150);
      }else if(color == 3){
      analogWrite(LED_B_R, 0);
      analogWrite(LED_B_G, 150);
      }else if(color == 0){
      analogWrite(LED_B_R, 0);
      analogWrite(LED_B_G, 0);
      }             
   }  
  }

void leer_dt(int i, int j){  
  if(t >= 0 && t <= 40){
      dt = (float)delta_t_table[i][j] / 100;
    }else{
     dt = 0;
   }
}  

void led_dt(){  
    if(dt <= 1){encendido_led(1,1);}
    if(dt > 1 && dt <= 2){encendido_led(1,2);}
    if(dt > 2 && dt <= 8){encendido_led(1,3);}
    if(dt > 8 && dt <= 11){encendido_led(1,2);}
    if(dt > 11){encendido_led(1,1);}   
  }

void led_viento(){
  static unsigned long t_millis = millis();
  static unsigned long dif_millis;
  static int muestras;
  static int v_prom;
  static int v_prom_res;
  static bool muestra_def;

  muestras++;
  v_prom += flow_Lmin;
  if(muestras > 15){
    v_prom_res = v_prom / muestras;
    v_prom = 0;
    muestras = 0;
    muestra_def = true;
   }
  /*
  if((dif_millis - t_millis) > 1000){
    muestras++;
    v_prom += flowLmin;
    if(muestras > 60){
      v_prom_res = v_prom / muestras;
      v_prom = 0;
      muestras = 0;
     }
     dif_millis = millis();
    }  
   */
  if(muestra_def == true){
    if(v_prom_res <= viento_min){encendido_led(2,2);}
    if(v_prom_res > viento_min && v_prom_res <= viento_med){encendido_led(2,3);}
    if(v_prom_res > viento_med && v_prom_res <= viento_max){encendido_led(2,2);}
    if(v_prom_res > viento_max){encendido_led(2,1);}
   }else{
    encendido_led(2,0);
    }
  }

void read_dht(){
  h = sensor.readHumidity();
  h = h / factorKt;
  t = sensor.readTemperature();
  t = t / factorKh;
}

void loop()
{     
   float frequency = GetFrequency();
   flow_Lmin = frequency / factorK;     
   leer_dt(int(t), int(h));
   led_dt();
   led_viento();
   lcd.setCursor(2, 0);lcd.print(flow_Lmin,0);lcd.print("km ");
   lcd.setCursor(12, 0);lcd.print(dt,1);
   lcd.setCursor(3, 1);lcd.print(t,0);lcd.print("c");
   lcd.setCursor(12, 1);lcd.print(h,0);lcd.print("%");
   Serial.println(flow_Lmin,0); 
   
}


   
